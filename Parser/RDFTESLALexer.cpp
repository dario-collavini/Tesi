
// Generated from RDFTESLA.g4 by ANTLR 4.6


#include "RDFTESLALexer.h"


using namespace antlr4;


RDFTESLALexer::RDFTESLALexer(CharStream *input) : Lexer(input) {
  _interpreter = new atn::LexerATNSimulator(this, _atn, _decisionToDFA, _sharedContextCache);
}

RDFTESLALexer::~RDFTESLALexer() {
  delete _interpreter;
}

std::string RDFTESLALexer::getGrammarFileName() const {
  return "RDFTESLA.g4";
}

const std::vector<std::string>& RDFTESLALexer::getRuleNames() const {
  return _ruleNames;
}

const std::vector<std::string>& RDFTESLALexer::getModeNames() const {
  return _modeNames;
}

const std::vector<std::string>& RDFTESLALexer::getTokenNames() const {
  return _tokenNames;
}

dfa::Vocabulary& RDFTESLALexer::getVocabulary() const {
  return _vocabulary;
}

const std::vector<uint16_t> RDFTESLALexer::getSerializedATN() const {
  return _serializedATN;
}

const atn::ATN& RDFTESLALexer::getATN() const {
  return _atn;
}


void RDFTESLALexer::action(RuleContext *context, size_t ruleIndex, size_t actionIndex) {
  switch (ruleIndex) {
    case 35: STRING_VALAction(dynamic_cast<antlr4::RuleContext *>(context), actionIndex); break;
    case 36: SPARQL_QUERYAction(dynamic_cast<antlr4::RuleContext *>(context), actionIndex); break;

  default:
    break;
  }
}

void RDFTESLALexer::STRING_VALAction(antlr4::RuleContext *context, size_t actionIndex) {
  switch (actionIndex) {
    case 0: ss << '\r'; break;
    case 1: ss << '\n'; break;
    case 2: ss << '\t'; break;
    case 3: ss << '\\'; break;
    case 4: ss << '"'; break;
    case 5: ss << ((char)_input->LA(-1)); break;
    case 6: str = ss.str(); break;

  default:
    break;
  }
}

void RDFTESLALexer::SPARQL_QUERYAction(antlr4::RuleContext *context, size_t actionIndex) {
  switch (actionIndex) {
    case 7: ss << '\r'; break;
    case 8: ss << '\n'; break;
    case 9: ss << '\t'; break;
    case 10: ss << '\\'; break;
    case 11: ss << '"'; break;
    case 12: ss << ((char)_input->LA(-1)); break;
    case 13: str = ss.str(); break;

  default:
    break;
  }
}



// Static vars and initialization.
std::vector<dfa::DFA> RDFTESLALexer::_decisionToDFA;
atn::PredictionContextCache RDFTESLALexer::_sharedContextCache;

// We own the ATN which in turn owns the ATN states.
atn::ATN RDFTESLALexer::_atn;
std::vector<uint16_t> RDFTESLALexer::_serializedATN;

std::vector<std::string> RDFTESLALexer::_ruleNames = {
  "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
  "T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
  "T__17", "T__18", "T__19", "ASSIGN", "DEFINE", "FROM", "WITH", "WHERE", 
  "CONSUMING", "VALTYPE", "SEL_POLICY", "AGGR_FUN", "OPERATOR", "BINOP_MUL", 
  "BINOP_ADD", "INT_VAL", "FLOAT_VAL", "BOOL_VAL", "STRING_VAL", "SPARQL_QUERY", 
  "EVT_NAME", "URI_NAME", "SPARQL_VAR", "WS"
};

std::vector<std::string> RDFTESLALexer::_modeNames = {
  "DEFAULT_MODE"
};

std::vector<std::string> RDFTESLALexer::_literalNames = {
  "", "'.'", "'within'", "'from'", "'between'", "'and'", "'('", "','", "')'", 
  "':='", "'['", "']'", "'as'", "'not'", "'=>'", "'='", "':'", "'<'", "'>'", 
  "' '", "';'", "'Assign'", "'Define'", "'From'", "'With'", "'Where'", "'Consuming'"
};

std::vector<std::string> RDFTESLALexer::_symbolicNames = {
  "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
  "", "", "", "ASSIGN", "DEFINE", "FROM", "WITH", "WHERE", "CONSUMING", 
  "VALTYPE", "SEL_POLICY", "AGGR_FUN", "OPERATOR", "BINOP_MUL", "BINOP_ADD", 
  "INT_VAL", "FLOAT_VAL", "BOOL_VAL", "STRING_VAL", "SPARQL_QUERY", "EVT_NAME", 
  "URI_NAME", "SPARQL_VAR", "WS"
};

dfa::Vocabulary RDFTESLALexer::_vocabulary(_literalNames, _symbolicNames);

std::vector<std::string> RDFTESLALexer::_tokenNames;

RDFTESLALexer::Initializer::Initializer() {
  // This code could be in a static initializer lambda, but VS doesn't allow access to private class members from there.
	for (size_t i = 0; i < _symbolicNames.size(); ++i) {
		std::string name = _vocabulary.getLiteralName(i);
		if (name.empty()) {
			name = _vocabulary.getSymbolicName(i);
		}

		if (name.empty()) {
			_tokenNames.push_back("<INVALID>");
		} else {
      _tokenNames.push_back(name);
    }
	}

  _serializedATN = {
    0x3, 0x430, 0xd6d1, 0x8206, 0xad2d, 0x4417, 0xaef1, 0x8d80, 0xaadd, 
    0x2, 0x2b, 0x166, 0x8, 0x1, 0x4, 0x2, 0x9, 0x2, 0x4, 0x3, 0x9, 0x3, 
    0x4, 0x4, 0x9, 0x4, 0x4, 0x5, 0x9, 0x5, 0x4, 0x6, 0x9, 0x6, 0x4, 0x7, 
    0x9, 0x7, 0x4, 0x8, 0x9, 0x8, 0x4, 0x9, 0x9, 0x9, 0x4, 0xa, 0x9, 0xa, 
    0x4, 0xb, 0x9, 0xb, 0x4, 0xc, 0x9, 0xc, 0x4, 0xd, 0x9, 0xd, 0x4, 0xe, 
    0x9, 0xe, 0x4, 0xf, 0x9, 0xf, 0x4, 0x10, 0x9, 0x10, 0x4, 0x11, 0x9, 
    0x11, 0x4, 0x12, 0x9, 0x12, 0x4, 0x13, 0x9, 0x13, 0x4, 0x14, 0x9, 0x14, 
    0x4, 0x15, 0x9, 0x15, 0x4, 0x16, 0x9, 0x16, 0x4, 0x17, 0x9, 0x17, 0x4, 
    0x18, 0x9, 0x18, 0x4, 0x19, 0x9, 0x19, 0x4, 0x1a, 0x9, 0x1a, 0x4, 0x1b, 
    0x9, 0x1b, 0x4, 0x1c, 0x9, 0x1c, 0x4, 0x1d, 0x9, 0x1d, 0x4, 0x1e, 0x9, 
    0x1e, 0x4, 0x1f, 0x9, 0x1f, 0x4, 0x20, 0x9, 0x20, 0x4, 0x21, 0x9, 0x21, 
    0x4, 0x22, 0x9, 0x22, 0x4, 0x23, 0x9, 0x23, 0x4, 0x24, 0x9, 0x24, 0x4, 
    0x25, 0x9, 0x25, 0x4, 0x26, 0x9, 0x26, 0x4, 0x27, 0x9, 0x27, 0x4, 0x28, 
    0x9, 0x28, 0x4, 0x29, 0x9, 0x29, 0x4, 0x2a, 0x9, 0x2a, 0x3, 0x2, 0x3, 
    0x2, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 0x3, 
    0x3, 0x3, 0x4, 0x3, 0x4, 0x3, 0x4, 0x3, 0x4, 0x3, 0x4, 0x3, 0x5, 0x3, 
    0x5, 0x3, 0x5, 0x3, 0x5, 0x3, 0x5, 0x3, 0x5, 0x3, 0x5, 0x3, 0x5, 0x3, 
    0x6, 0x3, 0x6, 0x3, 0x6, 0x3, 0x6, 0x3, 0x7, 0x3, 0x7, 0x3, 0x8, 0x3, 
    0x8, 0x3, 0x9, 0x3, 0x9, 0x3, 0xa, 0x3, 0xa, 0x3, 0xa, 0x3, 0xb, 0x3, 
    0xb, 0x3, 0xc, 0x3, 0xc, 0x3, 0xd, 0x3, 0xd, 0x3, 0xd, 0x3, 0xe, 0x3, 
    0xe, 0x3, 0xe, 0x3, 0xe, 0x3, 0xf, 0x3, 0xf, 0x3, 0xf, 0x3, 0x10, 0x3, 
    0x10, 0x3, 0x11, 0x3, 0x11, 0x3, 0x12, 0x3, 0x12, 0x3, 0x13, 0x3, 0x13, 
    0x3, 0x14, 0x3, 0x14, 0x3, 0x15, 0x3, 0x15, 0x3, 0x16, 0x3, 0x16, 0x3, 
    0x16, 0x3, 0x16, 0x3, 0x16, 0x3, 0x16, 0x3, 0x16, 0x3, 0x17, 0x3, 0x17, 
    0x3, 0x17, 0x3, 0x17, 0x3, 0x17, 0x3, 0x17, 0x3, 0x17, 0x3, 0x18, 0x3, 
    0x18, 0x3, 0x18, 0x3, 0x18, 0x3, 0x18, 0x3, 0x19, 0x3, 0x19, 0x3, 0x19, 
    0x3, 0x19, 0x3, 0x19, 0x3, 0x1a, 0x3, 0x1a, 0x3, 0x1a, 0x3, 0x1a, 0x3, 
    0x1a, 0x3, 0x1a, 0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1b, 
    0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1b, 0x3, 0x1c, 0x3, 
    0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 
    0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 
    0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x3, 0x1c, 0x5, 0x1c, 0xcd, 0xa, 0x1c, 0x3, 
    0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1d, 
    0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x3, 
    0x1d, 0x3, 0x1d, 0x3, 0x1d, 0x5, 0x1d, 0xdf, 0xa, 0x1d, 0x3, 0x1e, 0x3, 
    0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 
    0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x3, 
    0x1e, 0x3, 0x1e, 0x3, 0x1e, 0x5, 0x1e, 0xf2, 0xa, 0x1e, 0x3, 0x1f, 0x3, 
    0x1f, 0x3, 0x1f, 0x3, 0x1f, 0x3, 0x1f, 0x3, 0x1f, 0x3, 0x1f, 0x3, 0x1f, 
    0x5, 0x1f, 0xfc, 0xa, 0x1f, 0x3, 0x20, 0x3, 0x20, 0x3, 0x21, 0x3, 0x21, 
    0x3, 0x22, 0x6, 0x22, 0x103, 0xa, 0x22, 0xd, 0x22, 0xe, 0x22, 0x104, 
    0x3, 0x23, 0x6, 0x23, 0x108, 0xa, 0x23, 0xd, 0x23, 0xe, 0x23, 0x109, 
    0x3, 0x23, 0x3, 0x23, 0x6, 0x23, 0x10e, 0xa, 0x23, 0xd, 0x23, 0xe, 0x23, 
    0x10f, 0x3, 0x24, 0x3, 0x24, 0x3, 0x24, 0x3, 0x24, 0x3, 0x24, 0x3, 0x24, 
    0x3, 0x24, 0x3, 0x24, 0x3, 0x24, 0x5, 0x24, 0x11b, 0xa, 0x24, 0x3, 0x25, 
    0x3, 0x25, 0x3, 0x25, 0x3, 0x25, 0x3, 0x25, 0x3, 0x25, 0x3, 0x25, 0x3, 
    0x25, 0x3, 0x25, 0x3, 0x25, 0x3, 0x25, 0x3, 0x25, 0x5, 0x25, 0x129, 
    0xa, 0x25, 0x3, 0x25, 0x3, 0x25, 0x7, 0x25, 0x12d, 0xa, 0x25, 0xc, 0x25, 
    0xe, 0x25, 0x130, 0xb, 0x25, 0x3, 0x25, 0x3, 0x25, 0x3, 0x25, 0x3, 0x26, 
    0x3, 0x26, 0x3, 0x26, 0x3, 0x26, 0x3, 0x26, 0x3, 0x26, 0x3, 0x26, 0x3, 
    0x26, 0x3, 0x26, 0x3, 0x26, 0x3, 0x26, 0x3, 0x26, 0x5, 0x26, 0x141, 
    0xa, 0x26, 0x3, 0x26, 0x3, 0x26, 0x7, 0x26, 0x145, 0xa, 0x26, 0xc, 0x26, 
    0xe, 0x26, 0x148, 0xb, 0x26, 0x3, 0x26, 0x3, 0x26, 0x3, 0x26, 0x3, 0x27, 
    0x3, 0x27, 0x7, 0x27, 0x14f, 0xa, 0x27, 0xc, 0x27, 0xe, 0x27, 0x152, 
    0xb, 0x27, 0x3, 0x28, 0x6, 0x28, 0x155, 0xa, 0x28, 0xd, 0x28, 0xe, 0x28, 
    0x156, 0x3, 0x29, 0x3, 0x29, 0x7, 0x29, 0x15b, 0xa, 0x29, 0xc, 0x29, 
    0xe, 0x29, 0x15e, 0xb, 0x29, 0x3, 0x2a, 0x6, 0x2a, 0x161, 0xa, 0x2a, 
    0xd, 0x2a, 0xe, 0x2a, 0x162, 0x3, 0x2a, 0x3, 0x2a, 0x2, 0x2, 0x2b, 0x3, 
    0x3, 0x5, 0x4, 0x7, 0x5, 0x9, 0x6, 0xb, 0x7, 0xd, 0x8, 0xf, 0x9, 0x11, 
    0xa, 0x13, 0xb, 0x15, 0xc, 0x17, 0xd, 0x19, 0xe, 0x1b, 0xf, 0x1d, 0x10, 
    0x1f, 0x11, 0x21, 0x12, 0x23, 0x13, 0x25, 0x14, 0x27, 0x15, 0x29, 0x16, 
    0x2b, 0x17, 0x2d, 0x18, 0x2f, 0x19, 0x31, 0x1a, 0x33, 0x1b, 0x35, 0x1c, 
    0x37, 0x1d, 0x39, 0x1e, 0x3b, 0x1f, 0x3d, 0x20, 0x3f, 0x21, 0x41, 0x22, 
    0x43, 0x23, 0x45, 0x24, 0x47, 0x25, 0x49, 0x26, 0x4b, 0x27, 0x4d, 0x28, 
    0x4f, 0x29, 0x51, 0x2a, 0x53, 0x2b, 0x3, 0x2, 0xa, 0x4, 0x2, 0x28, 0x28, 
    0x7e, 0x7e, 0x4, 0x2, 0x2c, 0x2c, 0x31, 0x31, 0x4, 0x2, 0x2d, 0x2d, 
    0x2f, 0x2f, 0x4, 0x2, 0x24, 0x24, 0x5e, 0x5e, 0x6, 0x2, 0x32, 0x3b, 
    0x43, 0x5c, 0x61, 0x61, 0x63, 0x7c, 0xc, 0x2, 0x25, 0x25, 0x27, 0x28, 
    0x2d, 0x2d, 0x2f, 0x3c, 0x3f, 0x3f, 0x41, 0x5c, 0x5e, 0x5e, 0x61, 0x61, 
    0x63, 0x7c, 0x80, 0x80, 0x4, 0x2, 0x26, 0x26, 0x41, 0x41, 0x5, 0x2, 
    0xb, 0xc, 0xf, 0xf, 0x22, 0x22, 0x187, 0x2, 0x3, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x5, 0x3, 0x2, 0x2, 0x2, 0x2, 0x7, 0x3, 0x2, 0x2, 0x2, 0x2, 0x9, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0xb, 0x3, 0x2, 0x2, 0x2, 0x2, 0xd, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0xf, 0x3, 0x2, 0x2, 0x2, 0x2, 0x11, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x13, 0x3, 0x2, 0x2, 0x2, 0x2, 0x15, 0x3, 0x2, 0x2, 0x2, 0x2, 0x17, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x19, 0x3, 0x2, 0x2, 0x2, 0x2, 0x1b, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x1d, 0x3, 0x2, 0x2, 0x2, 0x2, 0x1f, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x21, 0x3, 0x2, 0x2, 0x2, 0x2, 0x23, 0x3, 0x2, 0x2, 0x2, 0x2, 0x25, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x27, 0x3, 0x2, 0x2, 0x2, 0x2, 0x29, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x2b, 0x3, 0x2, 0x2, 0x2, 0x2, 0x2d, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x2f, 0x3, 0x2, 0x2, 0x2, 0x2, 0x31, 0x3, 0x2, 0x2, 0x2, 0x2, 0x33, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x35, 0x3, 0x2, 0x2, 0x2, 0x2, 0x37, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x39, 0x3, 0x2, 0x2, 0x2, 0x2, 0x3b, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x3d, 0x3, 0x2, 0x2, 0x2, 0x2, 0x3f, 0x3, 0x2, 0x2, 0x2, 0x2, 0x41, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x43, 0x3, 0x2, 0x2, 0x2, 0x2, 0x45, 0x3, 0x2, 
    0x2, 0x2, 0x2, 0x47, 0x3, 0x2, 0x2, 0x2, 0x2, 0x49, 0x3, 0x2, 0x2, 0x2, 
    0x2, 0x4b, 0x3, 0x2, 0x2, 0x2, 0x2, 0x4d, 0x3, 0x2, 0x2, 0x2, 0x2, 0x4f, 
    0x3, 0x2, 0x2, 0x2, 0x2, 0x51, 0x3, 0x2, 0x2, 0x2, 0x2, 0x53, 0x3, 0x2, 
    0x2, 0x2, 0x3, 0x55, 0x3, 0x2, 0x2, 0x2, 0x5, 0x57, 0x3, 0x2, 0x2, 0x2, 
    0x7, 0x5e, 0x3, 0x2, 0x2, 0x2, 0x9, 0x63, 0x3, 0x2, 0x2, 0x2, 0xb, 0x6b, 
    0x3, 0x2, 0x2, 0x2, 0xd, 0x6f, 0x3, 0x2, 0x2, 0x2, 0xf, 0x71, 0x3, 0x2, 
    0x2, 0x2, 0x11, 0x73, 0x3, 0x2, 0x2, 0x2, 0x13, 0x75, 0x3, 0x2, 0x2, 
    0x2, 0x15, 0x78, 0x3, 0x2, 0x2, 0x2, 0x17, 0x7a, 0x3, 0x2, 0x2, 0x2, 
    0x19, 0x7c, 0x3, 0x2, 0x2, 0x2, 0x1b, 0x7f, 0x3, 0x2, 0x2, 0x2, 0x1d, 
    0x83, 0x3, 0x2, 0x2, 0x2, 0x1f, 0x86, 0x3, 0x2, 0x2, 0x2, 0x21, 0x88, 
    0x3, 0x2, 0x2, 0x2, 0x23, 0x8a, 0x3, 0x2, 0x2, 0x2, 0x25, 0x8c, 0x3, 
    0x2, 0x2, 0x2, 0x27, 0x8e, 0x3, 0x2, 0x2, 0x2, 0x29, 0x90, 0x3, 0x2, 
    0x2, 0x2, 0x2b, 0x92, 0x3, 0x2, 0x2, 0x2, 0x2d, 0x99, 0x3, 0x2, 0x2, 
    0x2, 0x2f, 0xa0, 0x3, 0x2, 0x2, 0x2, 0x31, 0xa5, 0x3, 0x2, 0x2, 0x2, 
    0x33, 0xaa, 0x3, 0x2, 0x2, 0x2, 0x35, 0xb0, 0x3, 0x2, 0x2, 0x2, 0x37, 
    0xcc, 0x3, 0x2, 0x2, 0x2, 0x39, 0xde, 0x3, 0x2, 0x2, 0x2, 0x3b, 0xf1, 
    0x3, 0x2, 0x2, 0x2, 0x3d, 0xfb, 0x3, 0x2, 0x2, 0x2, 0x3f, 0xfd, 0x3, 
    0x2, 0x2, 0x2, 0x41, 0xff, 0x3, 0x2, 0x2, 0x2, 0x43, 0x102, 0x3, 0x2, 
    0x2, 0x2, 0x45, 0x107, 0x3, 0x2, 0x2, 0x2, 0x47, 0x11a, 0x3, 0x2, 0x2, 
    0x2, 0x49, 0x11c, 0x3, 0x2, 0x2, 0x2, 0x4b, 0x134, 0x3, 0x2, 0x2, 0x2, 
    0x4d, 0x14c, 0x3, 0x2, 0x2, 0x2, 0x4f, 0x154, 0x3, 0x2, 0x2, 0x2, 0x51, 
    0x158, 0x3, 0x2, 0x2, 0x2, 0x53, 0x160, 0x3, 0x2, 0x2, 0x2, 0x55, 0x56, 
    0x7, 0x30, 0x2, 0x2, 0x56, 0x4, 0x3, 0x2, 0x2, 0x2, 0x57, 0x58, 0x7, 
    0x79, 0x2, 0x2, 0x58, 0x59, 0x7, 0x6b, 0x2, 0x2, 0x59, 0x5a, 0x7, 0x76, 
    0x2, 0x2, 0x5a, 0x5b, 0x7, 0x6a, 0x2, 0x2, 0x5b, 0x5c, 0x7, 0x6b, 0x2, 
    0x2, 0x5c, 0x5d, 0x7, 0x70, 0x2, 0x2, 0x5d, 0x6, 0x3, 0x2, 0x2, 0x2, 
    0x5e, 0x5f, 0x7, 0x68, 0x2, 0x2, 0x5f, 0x60, 0x7, 0x74, 0x2, 0x2, 0x60, 
    0x61, 0x7, 0x71, 0x2, 0x2, 0x61, 0x62, 0x7, 0x6f, 0x2, 0x2, 0x62, 0x8, 
    0x3, 0x2, 0x2, 0x2, 0x63, 0x64, 0x7, 0x64, 0x2, 0x2, 0x64, 0x65, 0x7, 
    0x67, 0x2, 0x2, 0x65, 0x66, 0x7, 0x76, 0x2, 0x2, 0x66, 0x67, 0x7, 0x79, 
    0x2, 0x2, 0x67, 0x68, 0x7, 0x67, 0x2, 0x2, 0x68, 0x69, 0x7, 0x67, 0x2, 
    0x2, 0x69, 0x6a, 0x7, 0x70, 0x2, 0x2, 0x6a, 0xa, 0x3, 0x2, 0x2, 0x2, 
    0x6b, 0x6c, 0x7, 0x63, 0x2, 0x2, 0x6c, 0x6d, 0x7, 0x70, 0x2, 0x2, 0x6d, 
    0x6e, 0x7, 0x66, 0x2, 0x2, 0x6e, 0xc, 0x3, 0x2, 0x2, 0x2, 0x6f, 0x70, 
    0x7, 0x2a, 0x2, 0x2, 0x70, 0xe, 0x3, 0x2, 0x2, 0x2, 0x71, 0x72, 0x7, 
    0x2e, 0x2, 0x2, 0x72, 0x10, 0x3, 0x2, 0x2, 0x2, 0x73, 0x74, 0x7, 0x2b, 
    0x2, 0x2, 0x74, 0x12, 0x3, 0x2, 0x2, 0x2, 0x75, 0x76, 0x7, 0x3c, 0x2, 
    0x2, 0x76, 0x77, 0x7, 0x3f, 0x2, 0x2, 0x77, 0x14, 0x3, 0x2, 0x2, 0x2, 
    0x78, 0x79, 0x7, 0x5d, 0x2, 0x2, 0x79, 0x16, 0x3, 0x2, 0x2, 0x2, 0x7a, 
    0x7b, 0x7, 0x5f, 0x2, 0x2, 0x7b, 0x18, 0x3, 0x2, 0x2, 0x2, 0x7c, 0x7d, 
    0x7, 0x63, 0x2, 0x2, 0x7d, 0x7e, 0x7, 0x75, 0x2, 0x2, 0x7e, 0x1a, 0x3, 
    0x2, 0x2, 0x2, 0x7f, 0x80, 0x7, 0x70, 0x2, 0x2, 0x80, 0x81, 0x7, 0x71, 
    0x2, 0x2, 0x81, 0x82, 0x7, 0x76, 0x2, 0x2, 0x82, 0x1c, 0x3, 0x2, 0x2, 
    0x2, 0x83, 0x84, 0x7, 0x3f, 0x2, 0x2, 0x84, 0x85, 0x7, 0x40, 0x2, 0x2, 
    0x85, 0x1e, 0x3, 0x2, 0x2, 0x2, 0x86, 0x87, 0x7, 0x3f, 0x2, 0x2, 0x87, 
    0x20, 0x3, 0x2, 0x2, 0x2, 0x88, 0x89, 0x7, 0x3c, 0x2, 0x2, 0x89, 0x22, 
    0x3, 0x2, 0x2, 0x2, 0x8a, 0x8b, 0x7, 0x3e, 0x2, 0x2, 0x8b, 0x24, 0x3, 
    0x2, 0x2, 0x2, 0x8c, 0x8d, 0x7, 0x40, 0x2, 0x2, 0x8d, 0x26, 0x3, 0x2, 
    0x2, 0x2, 0x8e, 0x8f, 0x7, 0x22, 0x2, 0x2, 0x8f, 0x28, 0x3, 0x2, 0x2, 
    0x2, 0x90, 0x91, 0x7, 0x3d, 0x2, 0x2, 0x91, 0x2a, 0x3, 0x2, 0x2, 0x2, 
    0x92, 0x93, 0x7, 0x43, 0x2, 0x2, 0x93, 0x94, 0x7, 0x75, 0x2, 0x2, 0x94, 
    0x95, 0x7, 0x75, 0x2, 0x2, 0x95, 0x96, 0x7, 0x6b, 0x2, 0x2, 0x96, 0x97, 
    0x7, 0x69, 0x2, 0x2, 0x97, 0x98, 0x7, 0x70, 0x2, 0x2, 0x98, 0x2c, 0x3, 
    0x2, 0x2, 0x2, 0x99, 0x9a, 0x7, 0x46, 0x2, 0x2, 0x9a, 0x9b, 0x7, 0x67, 
    0x2, 0x2, 0x9b, 0x9c, 0x7, 0x68, 0x2, 0x2, 0x9c, 0x9d, 0x7, 0x6b, 0x2, 
    0x2, 0x9d, 0x9e, 0x7, 0x70, 0x2, 0x2, 0x9e, 0x9f, 0x7, 0x67, 0x2, 0x2, 
    0x9f, 0x2e, 0x3, 0x2, 0x2, 0x2, 0xa0, 0xa1, 0x7, 0x48, 0x2, 0x2, 0xa1, 
    0xa2, 0x7, 0x74, 0x2, 0x2, 0xa2, 0xa3, 0x7, 0x71, 0x2, 0x2, 0xa3, 0xa4, 
    0x7, 0x6f, 0x2, 0x2, 0xa4, 0x30, 0x3, 0x2, 0x2, 0x2, 0xa5, 0xa6, 0x7, 
    0x59, 0x2, 0x2, 0xa6, 0xa7, 0x7, 0x6b, 0x2, 0x2, 0xa7, 0xa8, 0x7, 0x76, 
    0x2, 0x2, 0xa8, 0xa9, 0x7, 0x6a, 0x2, 0x2, 0xa9, 0x32, 0x3, 0x2, 0x2, 
    0x2, 0xaa, 0xab, 0x7, 0x59, 0x2, 0x2, 0xab, 0xac, 0x7, 0x6a, 0x2, 0x2, 
    0xac, 0xad, 0x7, 0x67, 0x2, 0x2, 0xad, 0xae, 0x7, 0x74, 0x2, 0x2, 0xae, 
    0xaf, 0x7, 0x67, 0x2, 0x2, 0xaf, 0x34, 0x3, 0x2, 0x2, 0x2, 0xb0, 0xb1, 
    0x7, 0x45, 0x2, 0x2, 0xb1, 0xb2, 0x7, 0x71, 0x2, 0x2, 0xb2, 0xb3, 0x7, 
    0x70, 0x2, 0x2, 0xb3, 0xb4, 0x7, 0x75, 0x2, 0x2, 0xb4, 0xb5, 0x7, 0x77, 
    0x2, 0x2, 0xb5, 0xb6, 0x7, 0x6f, 0x2, 0x2, 0xb6, 0xb7, 0x7, 0x6b, 0x2, 
    0x2, 0xb7, 0xb8, 0x7, 0x70, 0x2, 0x2, 0xb8, 0xb9, 0x7, 0x69, 0x2, 0x2, 
    0xb9, 0x36, 0x3, 0x2, 0x2, 0x2, 0xba, 0xbb, 0x7, 0x75, 0x2, 0x2, 0xbb, 
    0xbc, 0x7, 0x76, 0x2, 0x2, 0xbc, 0xbd, 0x7, 0x74, 0x2, 0x2, 0xbd, 0xbe, 
    0x7, 0x6b, 0x2, 0x2, 0xbe, 0xbf, 0x7, 0x70, 0x2, 0x2, 0xbf, 0xcd, 0x7, 
    0x69, 0x2, 0x2, 0xc0, 0xc1, 0x7, 0x6b, 0x2, 0x2, 0xc1, 0xc2, 0x7, 0x70, 
    0x2, 0x2, 0xc2, 0xcd, 0x7, 0x76, 0x2, 0x2, 0xc3, 0xc4, 0x7, 0x68, 0x2, 
    0x2, 0xc4, 0xc5, 0x7, 0x6e, 0x2, 0x2, 0xc5, 0xc6, 0x7, 0x71, 0x2, 0x2, 
    0xc6, 0xc7, 0x7, 0x63, 0x2, 0x2, 0xc7, 0xcd, 0x7, 0x76, 0x2, 0x2, 0xc8, 
    0xc9, 0x7, 0x64, 0x2, 0x2, 0xc9, 0xca, 0x7, 0x71, 0x2, 0x2, 0xca, 0xcb, 
    0x7, 0x71, 0x2, 0x2, 0xcb, 0xcd, 0x7, 0x6e, 0x2, 0x2, 0xcc, 0xba, 0x3, 
    0x2, 0x2, 0x2, 0xcc, 0xc0, 0x3, 0x2, 0x2, 0x2, 0xcc, 0xc3, 0x3, 0x2, 
    0x2, 0x2, 0xcc, 0xc8, 0x3, 0x2, 0x2, 0x2, 0xcd, 0x38, 0x3, 0x2, 0x2, 
    0x2, 0xce, 0xcf, 0x7, 0x67, 0x2, 0x2, 0xcf, 0xd0, 0x7, 0x63, 0x2, 0x2, 
    0xd0, 0xd1, 0x7, 0x65, 0x2, 0x2, 0xd1, 0xdf, 0x7, 0x6a, 0x2, 0x2, 0xd2, 
    0xd3, 0x7, 0x6e, 0x2, 0x2, 0xd3, 0xd4, 0x7, 0x63, 0x2, 0x2, 0xd4, 0xd5, 
    0x7, 0x75, 0x2, 0x2, 0xd5, 0xdf, 0x7, 0x76, 0x2, 0x2, 0xd6, 0xd7, 0x7, 
    0x68, 0x2, 0x2, 0xd7, 0xd8, 0x7, 0x6b, 0x2, 0x2, 0xd8, 0xd9, 0x7, 0x74, 
    0x2, 0x2, 0xd9, 0xda, 0x7, 0x75, 0x2, 0x2, 0xda, 0xdf, 0x7, 0x76, 0x2, 
    0x2, 0xdb, 0xdc, 0x7, 0x63, 0x2, 0x2, 0xdc, 0xdd, 0x7, 0x6e, 0x2, 0x2, 
    0xdd, 0xdf, 0x7, 0x6e, 0x2, 0x2, 0xde, 0xce, 0x3, 0x2, 0x2, 0x2, 0xde, 
    0xd2, 0x3, 0x2, 0x2, 0x2, 0xde, 0xd6, 0x3, 0x2, 0x2, 0x2, 0xde, 0xdb, 
    0x3, 0x2, 0x2, 0x2, 0xdf, 0x3a, 0x3, 0x2, 0x2, 0x2, 0xe0, 0xe1, 0x7, 
    0x43, 0x2, 0x2, 0xe1, 0xe2, 0x7, 0x58, 0x2, 0x2, 0xe2, 0xf2, 0x7, 0x49, 
    0x2, 0x2, 0xe3, 0xe4, 0x7, 0x55, 0x2, 0x2, 0xe4, 0xe5, 0x7, 0x57, 0x2, 
    0x2, 0xe5, 0xf2, 0x7, 0x4f, 0x2, 0x2, 0xe6, 0xe7, 0x7, 0x4f, 0x2, 0x2, 
    0xe7, 0xe8, 0x7, 0x43, 0x2, 0x2, 0xe8, 0xf2, 0x7, 0x5a, 0x2, 0x2, 0xe9, 
    0xea, 0x7, 0x4f, 0x2, 0x2, 0xea, 0xeb, 0x7, 0x4b, 0x2, 0x2, 0xeb, 0xf2, 
    0x7, 0x50, 0x2, 0x2, 0xec, 0xed, 0x7, 0x45, 0x2, 0x2, 0xed, 0xee, 0x7, 
    0x51, 0x2, 0x2, 0xee, 0xef, 0x7, 0x57, 0x2, 0x2, 0xef, 0xf0, 0x7, 0x50, 
    0x2, 0x2, 0xf0, 0xf2, 0x7, 0x56, 0x2, 0x2, 0xf1, 0xe0, 0x3, 0x2, 0x2, 
    0x2, 0xf1, 0xe3, 0x3, 0x2, 0x2, 0x2, 0xf1, 0xe6, 0x3, 0x2, 0x2, 0x2, 
    0xf1, 0xe9, 0x3, 0x2, 0x2, 0x2, 0xf1, 0xec, 0x3, 0x2, 0x2, 0x2, 0xf2, 
    0x3c, 0x3, 0x2, 0x2, 0x2, 0xf3, 0xfc, 0x4, 0x3e, 0x40, 0x2, 0xf4, 0xf5, 
    0x7, 0x40, 0x2, 0x2, 0xf5, 0xfc, 0x7, 0x3f, 0x2, 0x2, 0xf6, 0xf7, 0x7, 
    0x3e, 0x2, 0x2, 0xf7, 0xfc, 0x7, 0x3f, 0x2, 0x2, 0xf8, 0xf9, 0x7, 0x23, 
    0x2, 0x2, 0xf9, 0xfc, 0x7, 0x3f, 0x2, 0x2, 0xfa, 0xfc, 0x9, 0x2, 0x2, 
    0x2, 0xfb, 0xf3, 0x3, 0x2, 0x2, 0x2, 0xfb, 0xf4, 0x3, 0x2, 0x2, 0x2, 
    0xfb, 0xf6, 0x3, 0x2, 0x2, 0x2, 0xfb, 0xf8, 0x3, 0x2, 0x2, 0x2, 0xfb, 
    0xfa, 0x3, 0x2, 0x2, 0x2, 0xfc, 0x3e, 0x3, 0x2, 0x2, 0x2, 0xfd, 0xfe, 
    0x9, 0x3, 0x2, 0x2, 0xfe, 0x40, 0x3, 0x2, 0x2, 0x2, 0xff, 0x100, 0x9, 
    0x4, 0x2, 0x2, 0x100, 0x42, 0x3, 0x2, 0x2, 0x2, 0x101, 0x103, 0x4, 0x32, 
    0x3b, 0x2, 0x102, 0x101, 0x3, 0x2, 0x2, 0x2, 0x103, 0x104, 0x3, 0x2, 
    0x2, 0x2, 0x104, 0x102, 0x3, 0x2, 0x2, 0x2, 0x104, 0x105, 0x3, 0x2, 
    0x2, 0x2, 0x105, 0x44, 0x3, 0x2, 0x2, 0x2, 0x106, 0x108, 0x4, 0x32, 
    0x3b, 0x2, 0x107, 0x106, 0x3, 0x2, 0x2, 0x2, 0x108, 0x109, 0x3, 0x2, 
    0x2, 0x2, 0x109, 0x107, 0x3, 0x2, 0x2, 0x2, 0x109, 0x10a, 0x3, 0x2, 
    0x2, 0x2, 0x10a, 0x10b, 0x3, 0x2, 0x2, 0x2, 0x10b, 0x10d, 0x7, 0x30, 
    0x2, 0x2, 0x10c, 0x10e, 0x4, 0x32, 0x3b, 0x2, 0x10d, 0x10c, 0x3, 0x2, 
    0x2, 0x2, 0x10e, 0x10f, 0x3, 0x2, 0x2, 0x2, 0x10f, 0x10d, 0x3, 0x2, 
    0x2, 0x2, 0x10f, 0x110, 0x3, 0x2, 0x2, 0x2, 0x110, 0x46, 0x3, 0x2, 0x2, 
    0x2, 0x111, 0x112, 0x7, 0x68, 0x2, 0x2, 0x112, 0x113, 0x7, 0x63, 0x2, 
    0x2, 0x113, 0x114, 0x7, 0x6e, 0x2, 0x2, 0x114, 0x115, 0x7, 0x75, 0x2, 
    0x2, 0x115, 0x11b, 0x7, 0x67, 0x2, 0x2, 0x116, 0x117, 0x7, 0x76, 0x2, 
    0x2, 0x117, 0x118, 0x7, 0x74, 0x2, 0x2, 0x118, 0x119, 0x7, 0x77, 0x2, 
    0x2, 0x119, 0x11b, 0x7, 0x67, 0x2, 0x2, 0x11a, 0x111, 0x3, 0x2, 0x2, 
    0x2, 0x11a, 0x116, 0x3, 0x2, 0x2, 0x2, 0x11b, 0x48, 0x3, 0x2, 0x2, 0x2, 
    0x11c, 0x12e, 0x7, 0x24, 0x2, 0x2, 0x11d, 0x128, 0x7, 0x5e, 0x2, 0x2, 
    0x11e, 0x11f, 0x7, 0x74, 0x2, 0x2, 0x11f, 0x129, 0x8, 0x25, 0x2, 0x2, 
    0x120, 0x121, 0x7, 0x70, 0x2, 0x2, 0x121, 0x129, 0x8, 0x25, 0x3, 0x2, 
    0x122, 0x123, 0x7, 0x76, 0x2, 0x2, 0x123, 0x129, 0x8, 0x25, 0x4, 0x2, 
    0x124, 0x125, 0x7, 0x5e, 0x2, 0x2, 0x125, 0x129, 0x8, 0x25, 0x5, 0x2, 
    0x126, 0x127, 0x7, 0x24, 0x2, 0x2, 0x127, 0x129, 0x8, 0x25, 0x6, 0x2, 
    0x128, 0x11e, 0x3, 0x2, 0x2, 0x2, 0x128, 0x120, 0x3, 0x2, 0x2, 0x2, 
    0x128, 0x122, 0x3, 0x2, 0x2, 0x2, 0x128, 0x124, 0x3, 0x2, 0x2, 0x2, 
    0x128, 0x126, 0x3, 0x2, 0x2, 0x2, 0x129, 0x12d, 0x3, 0x2, 0x2, 0x2, 
    0x12a, 0x12b, 0xa, 0x5, 0x2, 0x2, 0x12b, 0x12d, 0x8, 0x25, 0x7, 0x2, 
    0x12c, 0x11d, 0x3, 0x2, 0x2, 0x2, 0x12c, 0x12a, 0x3, 0x2, 0x2, 0x2, 
    0x12d, 0x130, 0x3, 0x2, 0x2, 0x2, 0x12e, 0x12c, 0x3, 0x2, 0x2, 0x2, 
    0x12e, 0x12f, 0x3, 0x2, 0x2, 0x2, 0x12f, 0x131, 0x3, 0x2, 0x2, 0x2, 
    0x130, 0x12e, 0x3, 0x2, 0x2, 0x2, 0x131, 0x132, 0x7, 0x24, 0x2, 0x2, 
    0x132, 0x133, 0x8, 0x25, 0x8, 0x2, 0x133, 0x4a, 0x3, 0x2, 0x2, 0x2, 
    0x134, 0x146, 0x7, 0x5d, 0x2, 0x2, 0x135, 0x140, 0x7, 0x5e, 0x2, 0x2, 
    0x136, 0x137, 0x7, 0x74, 0x2, 0x2, 0x137, 0x141, 0x8, 0x26, 0x9, 0x2, 
    0x138, 0x139, 0x7, 0x70, 0x2, 0x2, 0x139, 0x141, 0x8, 0x26, 0xa, 0x2, 
    0x13a, 0x13b, 0x7, 0x76, 0x2, 0x2, 0x13b, 0x141, 0x8, 0x26, 0xb, 0x2, 
    0x13c, 0x13d, 0x7, 0x5e, 0x2, 0x2, 0x13d, 0x141, 0x8, 0x26, 0xc, 0x2, 
    0x13e, 0x13f, 0x7, 0x24, 0x2, 0x2, 0x13f, 0x141, 0x8, 0x26, 0xd, 0x2, 
    0x140, 0x136, 0x3, 0x2, 0x2, 0x2, 0x140, 0x138, 0x3, 0x2, 0x2, 0x2, 
    0x140, 0x13a, 0x3, 0x2, 0x2, 0x2, 0x140, 0x13c, 0x3, 0x2, 0x2, 0x2, 
    0x140, 0x13e, 0x3, 0x2, 0x2, 0x2, 0x141, 0x145, 0x3, 0x2, 0x2, 0x2, 
    0x142, 0x143, 0xa, 0x5, 0x2, 0x2, 0x143, 0x145, 0x8, 0x26, 0xe, 0x2, 
    0x144, 0x135, 0x3, 0x2, 0x2, 0x2, 0x144, 0x142, 0x3, 0x2, 0x2, 0x2, 
    0x145, 0x148, 0x3, 0x2, 0x2, 0x2, 0x146, 0x144, 0x3, 0x2, 0x2, 0x2, 
    0x146, 0x147, 0x3, 0x2, 0x2, 0x2, 0x147, 0x149, 0x3, 0x2, 0x2, 0x2, 
    0x148, 0x146, 0x3, 0x2, 0x2, 0x2, 0x149, 0x14a, 0x7, 0x5f, 0x2, 0x2, 
    0x14a, 0x14b, 0x8, 0x26, 0xf, 0x2, 0x14b, 0x4c, 0x3, 0x2, 0x2, 0x2, 
    0x14c, 0x150, 0x4, 0x43, 0x5c, 0x2, 0x14d, 0x14f, 0x9, 0x6, 0x2, 0x2, 
    0x14e, 0x14d, 0x3, 0x2, 0x2, 0x2, 0x14f, 0x152, 0x3, 0x2, 0x2, 0x2, 
    0x150, 0x14e, 0x3, 0x2, 0x2, 0x2, 0x150, 0x151, 0x3, 0x2, 0x2, 0x2, 
    0x151, 0x4e, 0x3, 0x2, 0x2, 0x2, 0x152, 0x150, 0x3, 0x2, 0x2, 0x2, 0x153, 
    0x155, 0x9, 0x7, 0x2, 0x2, 0x154, 0x153, 0x3, 0x2, 0x2, 0x2, 0x155, 
    0x156, 0x3, 0x2, 0x2, 0x2, 0x156, 0x154, 0x3, 0x2, 0x2, 0x2, 0x156, 
    0x157, 0x3, 0x2, 0x2, 0x2, 0x157, 0x50, 0x3, 0x2, 0x2, 0x2, 0x158, 0x15c, 
    0x9, 0x8, 0x2, 0x2, 0x159, 0x15b, 0x9, 0x6, 0x2, 0x2, 0x15a, 0x159, 
    0x3, 0x2, 0x2, 0x2, 0x15b, 0x15e, 0x3, 0x2, 0x2, 0x2, 0x15c, 0x15a, 
    0x3, 0x2, 0x2, 0x2, 0x15c, 0x15d, 0x3, 0x2, 0x2, 0x2, 0x15d, 0x52, 0x3, 
    0x2, 0x2, 0x2, 0x15e, 0x15c, 0x3, 0x2, 0x2, 0x2, 0x15f, 0x161, 0x9, 
    0x9, 0x2, 0x2, 0x160, 0x15f, 0x3, 0x2, 0x2, 0x2, 0x161, 0x162, 0x3, 
    0x2, 0x2, 0x2, 0x162, 0x160, 0x3, 0x2, 0x2, 0x2, 0x162, 0x163, 0x3, 
    0x2, 0x2, 0x2, 0x163, 0x164, 0x3, 0x2, 0x2, 0x2, 0x164, 0x165, 0x8, 
    0x2a, 0x10, 0x2, 0x165, 0x54, 0x3, 0x2, 0x2, 0x2, 0x17, 0x2, 0xcc, 0xde, 
    0xf1, 0xfb, 0x104, 0x109, 0x10f, 0x11a, 0x128, 0x12c, 0x12e, 0x140, 
    0x144, 0x146, 0x14e, 0x150, 0x156, 0x15a, 0x15c, 0x162, 0x11, 0x3, 0x25, 
    0x2, 0x3, 0x25, 0x3, 0x3, 0x25, 0x4, 0x3, 0x25, 0x5, 0x3, 0x25, 0x6, 
    0x3, 0x25, 0x7, 0x3, 0x25, 0x8, 0x3, 0x26, 0x9, 0x3, 0x26, 0xa, 0x3, 
    0x26, 0xb, 0x3, 0x26, 0xc, 0x3, 0x26, 0xd, 0x3, 0x26, 0xe, 0x3, 0x26, 
    0xf, 0x8, 0x2, 0x2, 
  };

  atn::ATNDeserializer deserializer;
  _atn = deserializer.deserialize(_serializedATN);

  size_t count = _atn.getNumberOfDecisions();
  _decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    _decisionToDFA.emplace_back(_atn.getDecisionState(i), i);
  }
}

RDFTESLALexer::Initializer RDFTESLALexer::_init;
